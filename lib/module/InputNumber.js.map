{"version":3,"sources":["InputNumber.js"],"names":["React","Component","TextInput","Text","isEmpty","isUndefined","connect","slug","findArrayName","InputNumber","constructor","props","value","data","numberOnly","replace","min","minValue","Number","max","maxValue","validate_min_max","setInput","state","props_name","console","log","Intl","NumberFormat","format","toString","setState","event","height","nativeEvent","contentSize","default_placeholder","placeholder","name","String","componentDidUpdate","prevProps","prevState","input","e","alert","val","enableNegative","isNaN","parseFloat","render","disabled","isReadonly","style","isResizable","Math","onContentSizeChange","id","handleInputChange","mapStateToProps","core","mapDispatchToProps","dispatch","key","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { TextInput, Text } from 'react-native';\r\n\r\nimport { isEmpty, isUndefined } from 'lodash';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { slug, findArrayName } from 'tcomponent';\r\n\r\nclass InputNumber extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let default_placeholder = this.props.placeholder;\r\n\r\n    this.state = {\r\n      height: 0,\r\n      placeholder: default_placeholder,\r\n      value: '',\r\n      props_name: this.props.name ? slug(String(this.props.name), '_') : '',\r\n    };\r\n  }\r\n\r\n  \r\n  componentDidUpdate(prevProps, prevState) {\r\n    try {\r\n      if (\r\n        findArrayName(this.state.props_name, this.props.input) !=\r\n          findArrayName(this.state.props_name, prevProps.input) &&\r\n        findArrayName(this.state.props_name, this.props.input) !=\r\n          this.state.value\r\n      ) {\r\n        let value = this.props.input[this.state.props_name] || '';\r\n\r\n        this.setState({ value });\r\n      }\r\n    } catch (e) {}\r\n\r\n    if (this.props.value && prevProps.value != this.props.value) {\r\n      alert(\"ch\")\r\n      let value = this.props.input[this.state.props_name] || 0;\r\n\r\n      this.setState({ value });\r\n     \r\n    }\r\n  }\r\n\r\n\r\n  validate_min_max(val, min = 0, max = 100) {\r\n    if (this.props.enableNegative && val < 0) {\r\n      min = -max\r\n    }\r\n\r\n    if (isNaN(val)) {\r\n      val = min\r\n    }\r\n\r\n    val = parseFloat(val)\r\n\r\n    if (val >= max) {\r\n      val = max\r\n    } else if (val <= min) {\r\n      val = min\r\n    }\r\n    return val ? Number(val) : null\r\n  }\r\n\r\n  handleInputChange = (value) => {\r\n    let data = value ? value : '';\r\n\r\n    if(this.props.numberOnly){\r\n      data = data.replace(/[^0-9]/g, '')\r\n    }\r\n\r\n    let min = this.props.minValue ? Number(this.props.minValue) : null\r\n\r\n    let max = this.props.maxValue ? Number(this.props.maxValue) : null\r\n\r\n    if (max && min) {\r\n      data = this.validate_min_max(data, min, max)\r\n    } else if (!max && min) {\r\n      data = this.validate_min_max(data, min, 999999999999)\r\n    } else if (max && !min) {\r\n      data = this.validate_min_max(data, 0, max)\r\n    }\r\n\r\n    this.props.setInput(this.state.props_name, data);\r\n\r\n    console.log(new Intl.NumberFormat().format(data).toString())\r\n\r\n    this.setState({ value: data});\r\n    \r\n  };\r\n\r\n  onContentSizeChange = (event) => {\r\n    this.setState({ height: event.nativeEvent.contentSize.height });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props,this.state.value)\r\n\r\n    if (this.props.disabled || this.props.isReadonly) {\r\n      return <Text>{!isEmpty(this.state.value) && this.state.value}</Text>;\r\n    }\r\n\r\n    let style = this.props.style;\r\n\r\n    // let multiline = false;\r\n\r\n    if (this.props.isResizable) {\r\n      style = [\r\n        { ...this.props.style },\r\n        {\r\n          height: Math.min(80, Math.max(35, this.state.height)),\r\n        },\r\n      ];\r\n      // multiline = true;\r\n    }\r\n\r\n    // console.log(this.state.props_name, this.state.height);\r\n\r\n    return (\r\n      <TextInput\r\n        {...this.props}\r\n        editable={true}\r\n        onContentSizeChange={this.onContentSizeChange}\r\n        style={style}\r\n        id={this.props.id}\r\n        placeholder={this.state.placeholder}\r\n        value={this.state.value.toString()}\r\n        onChangeText={this.handleInputChange}\r\n        name={this.state.props_name}\r\n        keyboardType=\"numeric\"\r\n        \r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  input: state.core.input || {},\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setInput: (key, val) =>\r\n    dispatch({\r\n      type: 'SET_INPUT',\r\n      payload: {\r\n        key: slug(String(key), '_'),\r\n        value: val,\r\n      },\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputNumber);\r\n"]}