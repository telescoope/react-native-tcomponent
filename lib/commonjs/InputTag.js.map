{"version":3,"sources":["InputTag.js"],"names":["InputTag","Component","constructor","props","state","setState","tags","console","log","new_val","tagsArray","push","tag","setInput","name","render","isReadonly","values","input","listTags","map","val","tagsStyle","styles","defaultTag","tagTextStyle","column","row","updateTagState","keysForTag","placeholder","label","labelStyle","containerStyle","inputContainerStyle","inputStyle","leftElement","leftElementContainerStyle","rightElement","rightElementContainerStyle","tagsViewStyle","tagStyle","defaultTagInput","onFocus","onBlur","autoCorrect","disabled","disabledInputStyle","deleteElement","deleteIconStyles","customElement","StyleSheet","create","backgroundColor","borderRadius","alignItems","marginHorizontal","paddingHorizontal","paddingVertical","marginVertical","flexWrap","height","paddingBottom","flexDirection","mapStateToProps","core","mapDispatchToProps","dispatch","key","type","payload","String","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nimport { isEmpty, isUndefined } from 'lodash';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { slug, findArrayName } from 'tcomponent';\r\n\r\nimport TagInput from 'react-native-tags-input';\r\nclass InputTag extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tags: {\r\n        tag: '',\r\n        tagsArray: [],\r\n      },\r\n    };\r\n\r\n  }\r\n\r\n  updateTagState = (state) => {\r\n    this.setState({\r\n      tags: state,\r\n    });\r\n\r\n    console.log(this.state.tags)\r\n    \r\n    let new_val = [...this.state.tags.tagsArray];\r\n    new_val.push(this.state.tags.tag );\r\n\r\n    this.props.setInput(this.props.name, new_val);\r\n  };\r\n\r\n\r\n  render() {\r\n    // console.log(this.props,this.state.value)\r\n\r\n    if (this.props.isReadonly) {\r\n      const values = this.props.input[this.props.name] || [];\r\n      const listTags = values.map((val) =>\r\n      <View style={this.props.tagsStyle ? this.props.tagsStyle : styles.defaultTag}>\r\n        <Text style={this.props.tagTextStyle}>{val}</Text>\r\n      </View>\r\n      );\r\n      return <View style={this.props.column ? styles.column : styles.row }>{listTags}</View>;\r\n    }\r\n\r\n    return (\r\n      <TagInput\r\n      updateState={this.updateTagState}\r\n      tags={this.state.tags}\r\n      keysForTag={this.props.keysForTag}\r\n\r\n      placeholder={this.props.placeholder}\r\n\r\n      label={this.props.label}\r\n      labelStyle={this.props.labelStyle}\r\n\r\n      containerStyle={this.props.containerStyle}\r\n\r\n      inputContainerStyle={this.props.inputContainerStyle}\r\n      inputStyle={this.props.inputStyle}\r\n\r\n      leftElement={this.props.leftElement}\r\n      leftElementContainerStyle={this.props.leftElementContainerStyle}\r\n      \r\n      rightElement={this.props.rightElement}\r\n      rightElementContainerStyle={this.props.rightElementContainerStyle}\r\n      \r\n      tagsViewStyle={this.props.tagsViewStyle}\r\n      tagStyle={this.props.tagStyle ? this.props.tagStyle : styles.defaultTagInput}\r\n      tagTextStyle={this.props.tagTextStyle}\r\n\r\n      onFocus={this.props.onFocus}\r\n      onBlur={this.props.onBlur}\r\n\r\n      autoCorrect={this.props.autoCorrect}\r\n     \r\n      disabled={this.props.disabled}\r\n      disabledInputStyle={this.props.disabledInputStyle}\r\n\r\n      deleteElement={this.props.deleteElement}\r\n      deleteIconStyles={this.props.deleteIconStyles}\r\n\r\n      customElement={this.props.customElement}\r\n    />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  defaultTag:{\r\n    backgroundColor: 'grey',\r\n    borderRadius: 50,\r\n    alignItems: 'center',\r\n    marginHorizontal: 5,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    marginVertical: 5,\r\n    flexWrap: \"wrap\",\r\n  },\r\n  defaultTagInput:{\r\n    backgroundColor: 'grey',\r\n    borderRadius: 50,\r\n    alignItems: 'center',\r\n    marginHorizontal: 5,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    marginVertical: 5,\r\n    flexWrap: \"wrap\",\r\n    height: '100%',\r\n    paddingBottom: 0\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    flexWrap: \"wrap\",\r\n    // width: '100%'\r\n  },\r\n  column: {\r\n    flexDirection: 'column'\r\n  }\r\n});\r\nconst mapStateToProps = (state) => ({\r\n  input: state.core.input || {},\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setInput: (key, val) =>\r\n    dispatch({\r\n      type: 'SET_INPUT',\r\n      payload: {\r\n        key: slug(String(key), '_'),\r\n        value: val,\r\n      },\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputTag);\r\n"]}